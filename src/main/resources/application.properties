spring.application.name=oci
spring.docker.compose.enabled=false

# OAuth2 Resource Server (Keycloak) for Bearer tokens on APIs
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://kc.prodet.org/realms/ociprodet/protocol/openid-connect/certs

# OAuth2 Client (Keycloak) for browser login redirect
spring.security.oauth2.client.registration.keycloak.client-id=${KEYCLOAK_CLIENT_ID:ociprodet}
spring.security.oauth2.client.registration.keycloak.client-name=Keycloak
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
# If your client in Keycloak is PUBLIC, keep the next line; if CONFIDENTIAL, change to client_secret_basic and set client-secret.
spring.security.oauth2.client.registration.keycloak.client-authentication-method=${KEYCLOAK_CLIENT_AUTH_METHOD:none}
#spring.security.oauth2.client.registration.keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET}
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.provider=keycloak

spring.security.oauth2.client.provider.keycloak.issuer-uri=https://kc.prodet.org/realms/ociprodet
